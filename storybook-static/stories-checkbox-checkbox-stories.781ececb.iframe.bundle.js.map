{"version":3,"file":"stories-checkbox-checkbox-stories.781ececb.iframe.bundle.js","mappings":";;;AAoEA;AACA;;;;;AAKA;AACA;;AAEA;;;;;;;;AAuBA;;;;;;AAqBA;AAEA;;;;AAIA;AAEA","sources":["webpack://thetak-library/./src/components/checkbox.tsx"],"sourcesContent":["\"use client\";\nimport { forwardRef } from \"react\";\nimport styled from \"@emotion/styled\";\n\ninterface Props {\n  className?: string;\n  size?: string;\n  gap?: string;\n  style?: React.CSSProperties;\n  checked?: boolean;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  label?: string;\n  customLabel?: React.ReactNode;\n  requiredPosition?: \"before\" | \"after\";\n  shape?: \"square\" | \"circle\";\n  disabled?: boolean;\n}\n\n// eslint-disable-next-line react/display-name\nexport const Checkbox = forwardRef((\n  {\n    className,\n    shape = \"square\",\n    size = \"20px\",\n    gap,\n    style,\n    checked = false,\n    onChange,\n    label,\n    customLabel,\n    requiredPosition,\n    disabled,\n  }: Props,\n  ref: any\n) => {\n  return (\n    <div style={{ height: size }}>\n      <CustomLabel\n        shape={shape}\n        disabled={disabled}\n        className={className}\n        ref={ref}\n        size={size}\n        gap={gap}\n        style={style}\n        requiredPosition={requiredPosition}\n        checked={checked}\n      >\n        <input type=\"checkbox\" checked={checked} onChange={onChange} />\n        <span className=\"label\">{label ? label : customLabel}</span>\n      </CustomLabel>\n    </div>\n  );\n});\n\nexport default Checkbox\n\nconst CustomLabel = styled.label<{\n  size: string;\n  gap?: string;\n  requiredPosition?: \"before\" | \"after\";\n  shape: \"square\" | \"circle\";\n  disabled: boolean;\n  checked: boolean;\n  checkbox?: any;\n}>`\n  display: inline-flex;\n  align-items: center;\n  gap: ${({ gap }) => (gap ? gap : \"6px\")};\n  color: ${({ theme }) => theme.colors.grayScale.black};\n  line-height: normal;\n  cursor: pointer;\n\n  input {\n    min-width: ${({ size }) => size};\n    height: ${({ size }) => size};\n    margin: 0px;\n    background-image: ${({ shape, disabled }) => {\n      if (shape === \"square\") {\n        if (disabled) {\n          return \"url(https://image.thetak.net/asset/product/images/checkbox_disabled.svg)\";\n        } else {\n          return \"url(https://image.thetak.net/asset/product/images/checkbox_default.svg)\";\n        }\n      }\n      if (shape === \"circle\") {\n        if (disabled) {\n          return \"url(https://image.thetak.net/asset/product/images/checkbox_radio_dsiabled_f.svg)\";\n        } else {\n          return \"url(https://image.thetak.net/asset/product/images/checkbox_radio_default.svg)\";\n        }\n      }\n    }};\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n    appearance: none;\n    cursor: pointer;\n\n    &:checked {\n      background-image: ${({ shape, disabled, theme }) => {\n        if (shape === \"square\") {\n          if (disabled) {\n            return `url(https://image.thetak.net/asset/product/images/checkbox_disabled_t.svg)`;\n          } else {\n            return `url(${theme.checkbox.square.checked})`;\n          }\n        }\n        if (shape === \"circle\") {\n          if (disabled) {\n            return \"url(https://image.thetak.net/asset/product/images/checkbox_radio_disabled_t.svg)\";\n          } else {\n            return `url(${theme.checkbox.radio.checked})`;\n          }\n        }\n      }};\n    }\n  }\n\n  .label {\n    ::before {\n      content: ${({ requiredPosition }) =>\n        requiredPosition === \"before\" ? '\"*\"' : \"none\"};\n      color: ${({ theme }) => theme.colors.errorColor.errorMain};\n    }\n\n    ::after {\n      content: ${({ requiredPosition }) =>\n        requiredPosition === \"after\" ? '\"*\"' : \"none\"};\n      color: ${({ theme }) => theme.colors.errorColor.errorMain};\n    }\n  }\n`;\n"],"names":[],"sourceRoot":""}